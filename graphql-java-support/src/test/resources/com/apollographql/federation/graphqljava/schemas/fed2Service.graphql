schema @link(import : ["@key", "@shareable", {name : "@tag", as : "@apollo_tag"}, "@override"], url : "https://specs.apollo.dev/federation/v2.0"){
  query: Query
}

directive @federation__extends on OBJECT | INTERFACE

directive @federation__external on OBJECT | FIELD_DEFINITION

directive @federation__inaccessible on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @key(fields: federation__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @link(as: String, import: [federation__Import], url: String!) repeatable on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @federation__provides(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @federation__requires(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @shareable on OBJECT | FIELD_DEFINITION

directive @apollo_tag(name: String!) repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

union _Entity = Position

type Position @key(fields : "id", resolvable : false) @shareable {
  id: ID! @apollo_tag(name : "internal")
  x: Int! @override(from : "otherGraph")
  y: Int!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service
}

type _Service {
  sdl: String!
}

scalar _Any

scalar federation__FieldSet

scalar federation__Import
