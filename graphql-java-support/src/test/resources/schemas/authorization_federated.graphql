schema @link(import : ["@authenticated", "@key", "@requiresScopes", "Scope", "FieldSet"], url : "https://specs.apollo.dev/federation/v2.5"){
  query: Query
}

directive @authenticated on SCALAR | OBJECT | FIELD_DEFINITION | INTERFACE | ENUM

directive @federation__composeDirective(name: String!) repeatable on SCHEMA

directive @federation__extends on OBJECT | INTERFACE

directive @federation__external on OBJECT | FIELD_DEFINITION

directive @federation__interfaceObject on OBJECT

directive @federation__override(from: String!) on FIELD_DEFINITION

directive @federation__provides(fields: FieldSet!) on FIELD_DEFINITION

directive @federation__requires(fields: FieldSet!) on FIELD_DEFINITION

directive @federation__shareable repeatable on OBJECT | FIELD_DEFINITION

directive @inaccessible on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @link(as: String, import: [link__Import], url: String!) repeatable on SCHEMA

directive @requiresScopes(scopes: [[Scope!]!]!) on SCALAR | OBJECT | FIELD_DEFINITION | INTERFACE | ENUM

directive @tag(name: String!) repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

union _Entity = Product

type Product @key(fields : "id", resolvable : true) {
  id: ID!
  name: String!
  supplier: String @requiresScopes(scopes : [["scopeA"]])
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  product(id: ID!): Product @authenticated
}

type _Service {
  sdl: String!
}

scalar FieldSet

scalar Scope

scalar _Any

scalar link__Import
